version: "2"

services:
  postgres:
    restart: always
    image: postgres:9.6
    container_name: qdice_postgres
    environment:
      POSTGRES_DB: "nodice"
      POSTGRES_USER: "bgrosse"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d/
  redis:
    restart: always
    image: redis:5.0.9-alpine
    volumes:
      - ./data/redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    entrypoint: redis-server --appendonly yes
  emqx:
    restart: always
    image: emqx/emqx:v3.2.8
    environment:
      EMQX_LOADED_PLUGINS: "emqx_management,emqx_auth_username,emqx_recon,emqx_retainer,emqx_dashboard"
      EMQX_DASHBOARD__DEFAULT_USER__PASSWORD: ${EMQX_DASHBOARD_PASSWORD}
      EMQX_AUTH__USER__1__USERNAME: ${MQTT_USERNAME}
      EMQX_AUTH__USER__1__PASSWORD: ${MQTT_PASSWORD}
    ports:
      - 28083:18083
    volumes:
      - ./acl.conf:/opt/emqx/etc/acl.conf
  nodice:
    restart: always
    image: bgrosse/qdice:backend
    env_file: .env
    volumes:
      - ${AVATAR_PATH}:${AVATAR_PATH}
    depends_on:
      - postgres
      - emqx
  beancounter:
    restart: always
    image: bgrosse/qdice:beancounter
    env_file: .env
    volumes:
      - ${SCREENSHOT_PATH}:/screenshots
  # certbot:
    # image: certbot/certbot
    # volumes:
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  nginx:
    restart: always
    env_file: .env
    image: bgrosse/qdice:frontend-production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/dhparam:/etc/ssl/certs # sudo openssl dhparam -out /home/sammy/node_project/dhparam/dhparam-2048.pem 2048
      - ${AVATAR_PATH}:/var/www/qdice.wtf/pictures:ro
      - ${SCREENSHOT_PATH}:/var/www/qdice.wtf/screenshots:ro
      - ./data/logs/nginx:/var/log/nginx
      - goaccess:/var/www/goaccess:ro
  certbot:
    image: certbot/certbot
    container_name: qdice_certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email ste3ls@gmail.com --agree-tos --no-eff-email --force-renewal -d qdice.wtf
  goaccess:
    image: allinurl/goaccess
    restart: always
    volumes:
      - ./data/goaccess/goaccess.conf:/srv/data/goaccess.conf:ro
      - goaccess:/srv/report:rw
      - ./data/logs/nginx:/srv/logs:ro
    command: "--no-global-config --config-file=/srv/data/goaccess.conf"
    cap_drop:
      - all

volumes:
  goaccess:
